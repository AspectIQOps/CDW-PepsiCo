version: "3.9"

services:
  postgres:
    image: postgres:18
    container_name: postgres
    restart: always
    env_file:
      - ../.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ../postgres/initdb:/docker-entrypoint-initdb.d:ro

  grafana:
    image: grafana/grafana:12.2.1
    container_name: grafana
    restart: always
    env_file:
      - ../.env
    ports:
      - "3000:3000"
    volumes:
      - ../grafana/appd_postgres_datasource.json:/etc/grafana/provisioning/datasources/appd_postgres_datasource.json:ro

  etl:
    build:
      context: ../   # repo root
      dockerfile: docker/etl/Dockerfile
    container_name: etl
    restart: on-failure
    depends_on:
      - postgres
    env_file:
      - ../.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      SN_INSTANCE: ${SN_INSTANCE}
      SN_USER: ${SN_USER}
      SN_PASS: ${SN_PASS}
    working_dir: /app/etl
    entrypoint: ["/entrypoint.sh"]
    volumes:
      - ../scripts:/app/etl
      - ../docker/etl/etl_cron:/etc/cron.d/etl-cron:ro
      - ../docker/etl/entrypoint.sh:/entrypoint.sh:ro
      - ../.env:/opt/appd-licensing/.env:ro
