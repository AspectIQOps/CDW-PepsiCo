services:
  # ==========================================================
  # PostgreSQL Database Service
  # ==========================================================
  postgres:
    image: postgres:16
    container_name: pepsico-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=appd_ro
      - POSTGRES_PASSWORD=appd_pass
      - POSTGRES_DB=appd_licensing
      - TZ=America/New_York
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # SQL scripts run in alpha-numeric order (01_schema, 02_seed_dimensions)
      - ./sql/init:/docker-entrypoint-initdb.d:ro
    ports:
      # PHASE 2: Exposed for Cloudflare Tunnel / Grafana Cloud access
      - "5432:5432"
    networks:
      - pepsico-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appd_ro -d appd_licensing"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ==========================================================
  # ETL Services (AppDynamics & ServiceNow)
  # ==========================================================
  # Individual ETL Services - For testing/debugging specific components
  etl_appd:
    build:
      context: .
      dockerfile: docker/etl/Dockerfile
    container_name: pepsico-etl-appd
    restart: "no"
    command: ["python3", "/app/scripts/etl/appd_etl.py"]
    env_file: .env
    environment:
      - DB_HOST=postgres
      - SSM_PATH=${SSM_PATH:-/aspectiq/demo}
    volumes:
      - ./scripts:/app/scripts:ro
      - ./docker/etl:/app/docker/etl:ro
      - etl_logs:/var/log/etl
      - ~/.aws:/root/.aws:ro
    networks:
      - pepsico-network
    depends_on:
      postgres:
        condition: service_healthy

  etl_snow:
    build:
      context: .
      dockerfile: docker/etl/Dockerfile
    container_name: pepsico-etl-snow
    restart: "no"
    command: ["python3", "/app/scripts/etl/snow_etl.py"]
    env_file: .env
    environment:
      - DB_HOST=postgres
      - SSM_PATH=${SSM_PATH:-/aspectiq/demo}
    volumes:
      - ./scripts:/app/scripts:ro
      - ./docker/etl:/app/docker/etl:ro
      - etl_logs:/var/log/etl
      - ~/.aws:/root/.aws:ro
    networks:
      - pepsico-network
    depends_on:
      postgres:
        condition: service_healthy

  # Unified ETL Service - Runs complete pipeline via entrypoint.sh
  etl:
    build:
      context: .
      dockerfile: docker/etl/Dockerfile
    container_name: pepsico-etl-unified
    restart: "no"
    command: ["./entrypoint.sh"]
    env_file: .env
    environment:
      - DB_HOST=postgres
      - SSM_PATH=${SSM_PATH:-/aspectiq/demo}
    volumes:
      - ./scripts:/app/scripts:ro
      - ./docker/etl:/app/docker/etl:ro
      - ./sql:/app/sql:ro
      - etl_logs:/var/log/etl
      - ~/.aws:/root/.aws:ro
    networks:
      - pepsico-network
    depends_on:
      postgres:
        condition: service_healthy

  # ==========================================================
  # PostgreSQL Exporter for Prometheus Metrics
  # ==========================================================
  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: pepsico-postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://appd_ro:appd_pass@postgres:5432/appd_licensing?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - pepsico-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    name: pepsico_postgres_data
  etl_logs:
    name: pepsico_etl_logs

networks:
  pepsico-network:
    name: pepsico-network
    driver: bridge